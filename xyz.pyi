from typing import Any, Optional, Dict
from dataclasses import dataclass
from abc import ABC, abstractmethod
from datetime import datetime

OBJECT: Dict[str, bool] = ...
EXTRACLASS: Dict[str, bool] = ...

@dataclass(**OBJECT)
class Object:
    id: int
    def __eq__(self, other: Any) -> bool: ...

class Voteable(ABC):
    id: int
    @abstractmethod
    def vote(self, vote_type: int): ...
    @abstractmethod
    def unvote(self): ...

class Updateable(ABC):
    id: int
    @abstractmethod
    def update(self, *args, **kwargs): ...
    @abstractmethod
    def delete(self): ...

@dataclass(**OBJECT)
class TimestampedObject(Object):
    created_at: int
    last_updated_at: int
    @property
    def created_at_dt(self) -> datetime: ...
    @property
    def last_updated_at_dt(self) -> datetime: ...


@dataclass(**EXTRACLASS)
class SessionIPs:
    def __init__(self, ips: dict = ...):
        self.authorized_ip: Optional[str] = ...
        self.last_relogin_ip: Optional[str] = ...

@dataclass(**EXTRACLASS)
class Vote:
    def __init__(self, vote: dict = ...):
        self.is_voted: bool = ...
        self.vote_type: int = ...

@dataclass(**EXTRACLASS)
class GDPSImages:
    def __init__(self, urls: dict = ...):
        self.avatar_url: Optional[str] = ...
        self.background_url: Optional[str] = ...

@dataclass(**EXTRACLASS)
class GDPSLinks:
    def __init__(self, links: dict = ...):
        self.download_windows: Optional[str] = ...
        self.download_android: Optional[str] = ...
        self.dashboard: Optional[str] = ...
        self.site: Optional[str] = ...

@dataclass(**EXTRACLASS)
class GDPSStats:
    def __init__(self, stats: dict = ...):
        self.likes: int = ...
        self.dislikes: int = ...
        self.reviews: int = ...
    @property
    def vote(self) -> Vote: ...

class PermissionLevel: 
    user: int = ...
    moderator: int = ...
    administrator: int = ...
class VoteType:
    like: int = ...
    dislike: int = ...
class Locale:
    russian: str = ...
    english: str = ...
    none: str = ...